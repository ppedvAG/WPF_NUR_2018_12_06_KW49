<Window x:Class="MVVM_PersonenDB.View.StartView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVM_PersonenDB.View"
        xmlns:vm="clr-namespace:MVVM_PersonenDB.ViewModel"
        mc:Ignorable="d"
        Title="Personen Datenbank" Height="156.475" Width="368.345"
        Style="{StaticResource sylWndGlobal}">
    
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Width" Value="80"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>
    </Window.Resources>

    <!--In MVVM-Views wird das entsprechnde ViewModel als DataContext gesetzt. Dies kann wie bisher im
        CodeBehind erfolgen oder es wird wie hier eine Instanz des ViewModels in Xaml erzeugt.-->
    <Window.DataContext>
        <vm:StartViewModel/>
    </Window.DataContext>
    
    <StackPanel Margin="10">
        <TextBlock Text="Personen Datenbank" FontSize="30" HorizontalAlignment="Center"/>
        <WrapPanel Margin="10" HorizontalAlignment="Center">
            <Button Content="Lade DB" Command="{Binding LadeDBCmd}"/>
            <Button Content="Öffne DB" 
                    Command="{Binding ÖffneDBCmd}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
        </WrapPanel>
        <WrapPanel HorizontalAlignment="Center">
            <TextBlock Text="Es wurden "/>
            <TextBlock Text="{Binding AnzahlPerson}"/>
            <TextBlock Text=" Personen geladen."/>
        </WrapPanel>
    </StackPanel>
</Window>
