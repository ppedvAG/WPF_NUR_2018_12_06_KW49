<Window x:Class="MVVM_PersonenDB.View.DetailView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVM_PersonenDB.View"
        xmlns:main="clr-namespace:MVVM_PersonenDB"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:m="clr-namespace:MVVM_PersonenDB.Model"
        mc:Ignorable="d"
        Title="Person bearbeiten" Height="280.035" Width="260.927"
        Style="{StaticResource sylWndGlobal}">
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <main:EnumToBoolConverter x:Key="enum2bool"/>
        <ObjectDataProvider ObjectType="{x:Type sys:Enum}" MethodName="GetValues" x:Key="colorProperties">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="m:Farben"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ControlTemplate x:Key="ctpError">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Border BorderBrush="Red" BorderThickness="1" x:Name="bdrAep">
                        <AdornedElementPlaceholder x:Name="aep"/>
                    </Border>
                    <TextBlock Text="!" Foreground="Red" FontSize="14" Margin="3,0" FontWeight="Bold" VerticalAlignment="Center"/>
                </StackPanel>
                <Popup AllowsTransparency="True" PopupAnimation="Fade"
                       PlacementTarget="{Binding ElementName=bdrAep}"
                       IsOpen="{Binding ElementName=aep, Path=AdornedElement.IsMouseOver, Mode=OneWay}"
                       Placement="Bottom">
                    <TextBlock Text="{Binding ElementName=aep, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                               Foreground="White" Background="Red" Padding="2"/>
                </Popup>
            </StackPanel>
        </ControlTemplate>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Text="Vorname:" />
        <TextBlock Text="Nachname:" 
                   Grid.Row="1"/>
        <TextBlock Text="Geburtsdatum:" 
                   Grid.Row="2"/>
        <TextBlock Text="Verheiratet:" 
                   Grid.Row="3"/>
        <TextBlock Text="Lieblingsfarbe:" 
                   Grid.Row="4"/>
        <TextBlock Text="Geschlecht:" 
                   Grid.Row="5"
                   VerticalAlignment="Top"/>

        <TextBox x:Name="tbxVorname"
                 Margin="2" 
                 Grid.Column="1"
                 Text="{Binding AktuellePerson.Vorname, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                 Validation.ErrorTemplate="{StaticResource ctpError}"/>
        <TextBox x:Name="tbxNachname"
                 Margin="2" 
                 Grid.Column="1" Grid.Row="1"
                 Text="{Binding AktuellePerson.Nachname, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                 Validation.ErrorTemplate="{StaticResource ctpError}"/>
        <DatePicker x:Name="dprGeburtsdatum"
                    Margin="2" 
                    Grid.Column="1" Grid.Row="2"
                    VerticalAlignment="Center"
                    SelectedDate="{Binding AktuellePerson.Geburtsdatum, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                    Validation.ErrorTemplate="{StaticResource ctpError}"/>
        <CheckBox Margin="2" 
                  Grid.Column="1" Grid.Row="3" 
                  VerticalAlignment="Center"
                  IsChecked="{Binding AktuellePerson.Verheiratet}"/>
        <ComboBox Margin="2" 
                  Grid.Column="1" Grid.Row="4"
                  ItemsSource="{Binding Source={StaticResource colorProperties}}"
                  SelectedValue="{Binding AktuellePerson.Lieblingsfarbe}">
        </ComboBox>
        <StackPanel Margin="2" 
                    Grid.Column="1" Grid.Row="5">
            <RadioButton Content="M" Margin="2" GroupName="rgpGender"
                         IsChecked="{Binding AktuellePerson.Geschlecht, ConverterParameter={x:Static m:Gender.Männlich},  Converter={StaticResource enum2bool}}"/>
            <RadioButton Content="W" Margin="2" GroupName="rgpGender"
                         IsChecked="{Binding AktuellePerson.Geschlecht, ConverterParameter={x:Static m:Gender.Weiblich},  Converter={StaticResource enum2bool}}"/>
            <RadioButton Content="D" Margin="2" GroupName="rgpGender" 
                         IsChecked="{Binding AktuellePerson.Geschlecht, ConverterParameter={x:Static m:Gender.Divers}, Converter={StaticResource enum2bool}}"/>
        </StackPanel>

        <WrapPanel Grid.Row="6" Grid.ColumnSpan="2" 
                   HorizontalAlignment="Right" Margin="0,5">
            <Button Content="OK" Width="80" Margin="0,5,5,5"
                    x:Name="btnOk"
                    Command="{Binding OkCmd}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=tbxVorname, Path=(Validation.HasError)}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=tbxNachname, Path=(Validation.HasError)}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=dprGeburtsdatum, Path=(Validation.HasError)}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="Abbruch" Width="80" Margin="0,5"
                    x:Name="btnCancel"
                    IsCancel="True"/>
        </WrapPanel>
    </Grid>
</Window>
